{"version":3,"sources":["CKEditor.es6"],"names":[],"mappings":";;;;;;;;;;;;AACA;;AAYA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAYa,sCALZ,qBAAU;AACP,cAAU,UAAV;AACA,4EAFO;CAAV,WAIA,QAAQ,QAAR,CAAiB,YAAjB,EAA+B,CAAC,IAAD,EAAO,CAAC,4BAAD,CAAP,CAA/B,WAGI,4BACA,4BACA,4BAEA,6BACA,qBAAU,MAAV;;;;;;AAUD,aAjBS,QAiBT,CAAY,UAAZ,EAAmC,SAAnC,EAAwD,QAAxD,EAA0E;8BAjBjE,UAiBiE;;;;;;;;;;;;aAR1E,QAAQ,GAQkE;aAP1E,yBAO0E;aAN1E,2BAM0E;aAL1E,yBAK0E;;AACtE,YAAI,SAAJ,EAAe;AACX,sBAAU,aAAV,GAA0B,IAA1B,CADW;AAEX,iBAAK,SAAL,GAAiB,SAAjB,CAFW;SAAf;AAIA,aAAK,QAAL,GAAgB,QAAhB,CALsE;KAA1E;;;;;;;iBAjBS;;sCA4BI;AACT,gBAAI,KAAK,QAAL,EAAgB;AAChB,qBAAK,QAAL,CAAc,kBAAd,GADgB;AAEhB,qBAAK,QAAL,CAAc,OAAd,GAFgB;AAGhB,qBAAK,QAAL,GAAgB,IAAhB,CAHgB;aAApB;;;;;;;;;0CAUa;;;;AAEb,gBAAI,SAAS,EAAT;;;AAFS,gBAKT,KAAK,UAAL,EAAiB;;AAEjB,oBAAI,UAAU,OAAO,MAAP,EAAe;AACzB,2BAAO,MAAP,CAAc,KAAK,UAAL,CAAd,CACK,IADL,CACU,UAAC,GAAD,EAAS;AACX,8BAAK,YAAL,CAAmB,IAAI,MAAJ,CAAnB,CADW;qBAAT,CADV,CADyB;iBAA7B;;;AAFiB,aAArB,MAUK;AACD,6BAAS,KAAK,MAAL,IAAe,EAAf,CADR;AAED,yBAAK,YAAL,CAAmB,MAAnB,EAFC;iBAVL;;;;;;;;;sCAmBU,OAAM;AAChB,gBAAI,QAAQ,KAAK,IAAL,CAAU,aAAV,CAAwB,KAAxB,CADI;AAEhB,iBAAK,MAAL,CAAY,IAAZ,CAAkB,KAAlB,EAFgB;AAGhB,iBAAK,SAAL,CAAe,iBAAf,CAAkC,KAAlC,EAHgB;;;;;;;;;qCASN,QAAQ;;;AAElB,gBAAG,CAAC,QAAD,EAAU;AACT,wBAAQ,KAAR,CAAc,sCAAd,EADS;AAET,uBAFS;aAAb;;;AAFkB,gBAQlB,CAAK,QAAL,GAAgB,SAAS,OAAT,CAAkB,KAAK,IAAL,CAAU,aAAV,EAAyB,MAA3C,CAAhB;;;AARkB,gBAWlB,CAAK,QAAL,CAAc,OAAd,CAAsB,KAAK,KAAL,CAAtB;;;AAXkB,gBAclB,CAAK,QAAL,CAAc,EAAd,CAAiB,QAAjB,EAA2B,YAAM;AAC7B,uBAAK,QAAL,CAAc,kBAAd,CAAiC,OAAK,IAAL,CAAU,aAAV,EAAyB,OAA1D,EAAmE,OAAK,QAAL,CAAc,OAAd,EAAnE,EAD6B;AAE7B,uBAAK,QAAL,CAAc,mBAAd,CAAkC,OAAK,IAAL,CAAU,aAAV,EAAyB,eAA3D,EAA4E,CAAC,IAAI,KAAJ,CAAU,QAAV,CAAD,CAA5E,EAF6B;aAAN,CAA3B,CAdkB;;;;;;;;;mCAuBX,OAAM;AACb,iBAAK,KAAL,GAAa,KAAb,CADa;AAEb,gBAAI,KAAK,QAAL,EACA,KAAK,QAAL,CAAc,OAAd,CAAsB,KAAtB,EADJ;;;;iCAGK,GAAE;;;oCACA;;;yCACM,IAAG;AAAC,iBAAK,QAAL,GAAgB,EAAhB,CAAD;;;;0CACF,IAAG;AAAC,iBAAK,SAAL,GAAiB,EAAjB,CAAD;;;;WAvGZ;;;;oBAEA;;;;;oBACA;;;;;oBACA;;;;;eAEU;;;;;oBACA;;;mGAPV","file":"CKEditor.js","sourcesContent":["// Imports\nimport {\n    Component,\n    Directive,\n    Input,\n    Output,\n    ElementRef,\n    ViewChild,\n    Optional,\n    OptionalMetadata,\n    EventEmitter,\n    Renderer\n} from 'angular2/core';\nimport {NgControl, ControlValueAccessor} from 'angular2/common';\n\n/**\n * CKEditor component\n * Usage :\n * <ckeditor [(ngModel)]=\"data\" [config]=\"{...}\" configFile=\"file.js\"></ckeditor>\n */\n@Component({\n    selector: 'ckeditor',\n    template: `<textarea #host (change)=\"onValueChange($event)\"></textarea>`,\n})\n@Reflect.metadata('parameters', [null, [new OptionalMetadata()]])\nexport class CKEditor {\n\n    @Input() config;\n    @Input() configFile;\n    @Input() ngModel;\n\n    @Output() change = new EventEmitter();\n    @ViewChild('host') host;\n\n    value = '';\n    instance;\n    ngControl;\n    renderer;\n\n    /**\n     * Constructor\n     */\n    constructor(elementRef:ElementRef, ngControl:NgControl, renderer:Renderer){\n        if( ngControl ){\n            ngControl.valueAccessor = this;\n            this.ngControl = ngControl;\n        }\n        this.renderer = renderer;\n    }\n\n    /**\n     * On component destroy\n     */\n    ngOnDestroy(){\n        if( this.instance ) {\n            this.instance.removeAllListeners();\n            this.instance.destroy();\n            this.instance = null;\n        }\n    }\n\n    /**\n     * On component view init\n     */\n    ngAfterViewInit(){\n        // Configuration\n        var config = {};\n\n        // Fetch file\n        if( this.configFile ){\n\n            if( System && System.import ){\n                System.import(this.configFile)\n                    .then((res) => {\n                        this.ckeditorInit( res.config );\n                    })\n            }\n\n        // Config object\n        }else{\n            config = this.config || {};\n            this.ckeditorInit( config );\n        }\n    }\n\n    /**\n     * Detect textarea value change\n     */\n    onValueChange(event){\n        var value = this.host.nativeElement.value;\n        this.change.emit( value );\n        this.ngControl.viewToModelUpdate( value );\n    }\n\n    /**\n     * CKEditor init\n     */\n    ckeditorInit( config ){\n\n        if(!CKEDITOR){\n            console.error('Please include CKEditor in your page');\n            return;\n        }\n\n        // CKEditor replace textarea\n        this.instance = CKEDITOR.replace( this.host.nativeElement, config );\n\n        // Set initial value\n        this.instance.setData(this.value);\n\n        // CKEditor change event\n        this.instance.on('change', () => {\n            this.renderer.setElementProperty(this.host.nativeElement, 'value', this.instance.getData());\n            this.renderer.invokeElementMethod(this.host.nativeElement, 'dispatchEvent', [new Event('change')]);\n        });\n    }\n\n    /**\n     * Implements ControlValueAccessor\n     */\n    writeValue(value){\n        this.value = value;\n        if( this.instance )\n            this.instance.setData(value);\n    }\n    onChange(_){}\n    onTouched(){}\n    registerOnChange(fn){this.onChange = fn;}\n    registerOnTouched(fn){this.onTouched = fn;}\n}\n"],"sourceRoot":"/source/"}